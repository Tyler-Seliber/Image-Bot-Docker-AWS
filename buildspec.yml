version: 0.2

# run-as: ec2-user

env:
  # shell: shell-tag
  # variables:
  #   key: "value"
  #   key: "value"
  # parameter-store:
  #   key: "value"
  #   key: "value"
  # exported-variables:
  #   - variable
  #   - variable
  secrets-manager:
    CLIENT_ID: Image-Bot-Keys:/CodeBuild/clientId
    GUILD_ID: Image-Bot-Keys:/CodeBuild/guildId
    TOKEN: Image-Bot-Keys:/CodeBuild/token
  git-credential-helper: no

# proxy:
#   upload-artifacts: no | yes
#   logs: no | yes

# batch:
#   fast-fail: false | true
#   # build-list:
#   # build-matrix:
#   # build-graph:
        
phases:
  install:
    # run-as: Linux-user-name
    on-failure: ABORT
    # runtime-versions:
    #   runtime: version
    #   runtime: version
    commands:
      - echo "Entering Image-Bot directory..."
      - cd Image-Bot/
      - echo "Configuring environment secrets..."
      # - remove config.json if it is aleady present, otherwise supress the error
      - rm config.json 2>/dev/null
      - echo "{ \n\tclientId:$CLIENT_ID, \n\tguildId:$GUILD_ID, \n\ttoken:$TOKEN \n}" >> config.json
    finally:
      - echo "Install phase completed!"
  pre_build:
    # run-as: Linux-user-name
    on-failure: ABORT
    commands:
      - echo "Installing Node dependencies..."
      - npm install
    finally:
      - echo "Pre-build phase completed!"
  # build:
  #   # run-as: Linux-user-name
  #   on-failure: ABORT
  #   commands:
  #     - command
  #     - command
  #   finally:
  #     - command
  #     - command
  # post_build:
  #   # run-as: Linux-user-name
  #   on-failure: ABORT
  #   commands:
  #     - command
  #     - command
  #   finally:
  #     - command
  #     - command
# reports:
#   report-group-name-or-arn:
#     files:
#       - location
#       - location
#     base-directory: location
#     discard-paths: no | yes
#     file-format: report-format
artifacts:
  files:
    - "build/*"
  name: build-artifact-$AWS_REGION-$(date +%Y-%m-%d) 
  # discard-paths: no | yes
  # base-directory: location
  # exclude-paths: excluded paths
  enable-symlinks: yes
  # s3-prefix: prefix
  # secondary-artifacts:
  #   artifactIdentifier:
  #     files:
  #       - location
  #       - location
  #     name: secondary-artifact-name
  #     discard-paths: no | yes
  #     base-directory: location
  #   artifactIdentifier:
  #     files:
  #       - location
  #       - location
  #     discard-paths: no | yes
  #     base-directory: location
# cache:
#   paths:
#     - path
#     - path
